# Generated by Django 3.1 on 2020-09-16 21:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=50, verbose_name='First Name')),
                ('lname', models.CharField(max_length=50, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('subject', models.CharField(max_length=50, verbose_name='Title')),
                ('message', models.CharField(max_length=50, verbose_name='Message')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date Added')),
            ],
            options={
                'verbose_name': 'ContactMessage',
                'verbose_name_plural': 'ContactMessages',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('for_home', models.BooleanField(default=False, verbose_name='Show on homepage')),
                ('icon', models.CharField(choices=[('account_circle', 'account_circle'), ('add_shopping_cart', 'add_shopping_cart'), ('alarm', 'alarm'), ('attach_file', 'attach_file'), ('attach_money', 'attach_money'), ('backup', 'backup'), ('build', 'build'), ('chat', 'chat'), ('dashboard', 'dashboard'), ('delete', 'delete'), ('description', 'description'), ('face', 'face'), ('favorite', 'favorite'), ('get_app', 'get_app'), ('help_outline', 'help_outline'), ('home', 'home'), ('important_devices', 'important_devices'), ('link', 'link'), ('local_shipping', 'local_shipping'), ('lock', 'lock'), ('mail', 'mail'), ('notification_important', 'notification_important'), ('psychology', 'psychology'), ('publish', 'publish'), ('reply', 'reply'), ('schedule', 'schedule'), ('send', 'send'), ('settings', 'settings'), ('share', 'share'), ('sync', 'sync'), ('vpn_key', 'vpn_key')], default='help_outline', max_length=50, verbose_name='Icon')),
                ('color', models.CharField(choices=[('success', 'success'), ('danger', 'danger'), ('warning', 'warning'), ('primary', 'primary'), ('secondary', 'secondary'), ('info', 'info'), ('light', 'light'), ('dark', 'dark'), ('rose', 'rose')], default='primary', max_length=50, verbose_name='Color')),
                ('priority', models.IntegerField(verbose_name='Priority')),
                ('question', models.CharField(max_length=200, verbose_name='Question')),
                ('answer', models.CharField(max_length=5000, verbose_name='Answer')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='Icon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('image_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/OurService/', verbose_name='Image')),
                ('url', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Link URL')),
                ('icon_fa', models.CharField(blank=True, max_length=50, null=True, verbose_name='Icon FontAwesome')),
                ('icon_material', models.CharField(blank=True, choices=[('account_circle', 'account_circle'), ('add_shopping_cart', 'add_shopping_cart'), ('alarm', 'alarm'), ('attach_file', 'attach_file'), ('attach_money', 'attach_money'), ('backup', 'backup'), ('build', 'build'), ('chat', 'chat'), ('dashboard', 'dashboard'), ('delete', 'delete'), ('description', 'description'), ('face', 'face'), ('favorite', 'favorite'), ('get_app', 'get_app'), ('help_outline', 'help_outline'), ('home', 'home'), ('important_devices', 'important_devices'), ('link', 'link'), ('local_shipping', 'local_shipping'), ('lock', 'lock'), ('mail', 'mail'), ('notification_important', 'notification_important'), ('psychology', 'psychology'), ('publish', 'publish'), ('reply', 'reply'), ('schedule', 'schedule'), ('send', 'send'), ('settings', 'settings'), ('share', 'share'), ('sync', 'sync'), ('vpn_key', 'vpn_key')], max_length=100, null=True, verbose_name='Icon Material')),
                ('icon_svg', models.TextField(blank=True, null=True, verbose_name='Icon svg')),
                ('color', models.CharField(choices=[('success', 'success'), ('danger', 'danger'), ('warning', 'warning'), ('primary', 'primary'), ('secondary', 'secondary'), ('info', 'info'), ('light', 'light'), ('dark', 'dark'), ('rose', 'rose')], default='primary', max_length=50, verbose_name='Color')),
                ('width', models.IntegerField(default=128, verbose_name='Width')),
                ('height', models.IntegerField(default=128, verbose_name='Height')),
            ],
            options={
                'verbose_name': 'Icon',
                'verbose_name_plural': 'Icons',
            },
        ),
        migrations.CreateModel(
            name='Jumbotron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pretitle', models.CharField(blank=True, max_length=500, null=True, verbose_name='Pre Title')),
                ('title', models.CharField(blank=True, max_length=500, null=True, verbose_name='Title')),
                ('posttitle', models.CharField(blank=True, max_length=500, null=True, verbose_name='Post Title')),
                ('short_description', models.TextField(blank=True, null=True, verbose_name='Short Description')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Full Description')),
                ('action_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Button Text')),
                ('action_url', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Button Link URL')),
                ('video_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Video Text')),
                ('video_url', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Video Link URL')),
            ],
            options={
                'verbose_name': 'Jumbotron',
                'verbose_name_plural': 'Jumbotrons',
            },
        ),
        migrations.CreateModel(
            name='MainPic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('CAROUSEL', 'CAROUSEL'), ('FAQ', 'FAQ'), ('SEARCH', 'SEARCH'), ('VIDEO', 'VIDEO'), ('ABOUT', 'ABOUT'), ('CONTACT_HEADER', 'CONTACT_HEADER'), ('LOGO', 'LOGO'), ('BLOG_HEADER', 'BLOG_HEADER'), ('OUR_WORK_HEADER', 'OUR_WORK_HEADER'), ('PAGE_HEADER_DEFAULT', 'PAGE_HEADER_DEFAULT'), ('TAG_HEADER', 'TAG_HEADER'), ('ABOUT_HEADER', 'ABOUT_HEADER')], max_length=50, verbose_name='Image Title')),
                ('image_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/MainPic/', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'MainPic',
                'verbose_name_plural': 'MainPics',
            },
        ),
        migrations.CreateModel(
            name='MetaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('for_home', models.BooleanField(default=False, verbose_name='Show on homepage')),
                ('key', models.CharField(default='name', max_length=50, verbose_name='key name')),
                ('value', models.CharField(default='description', max_length=50, verbose_name='key value')),
                ('content', models.CharField(max_length=2000, verbose_name='content')),
            ],
            options={
                'verbose_name': 'MetaData',
                'verbose_name_plural': 'MetaDatas',
            },
        ),
        migrations.CreateModel(
            name='OurTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('for_home', models.BooleanField(default=False, verbose_name='Show on homepage')),
                ('name', models.CharField(max_length=100, verbose_name='Full Name')),
                ('job', models.CharField(max_length=100, verbose_name='Job')),
                ('description', models.CharField(max_length=500, verbose_name='Description')),
                ('priority', models.IntegerField(default=1000, verbose_name='Priority')),
                ('image_origin', models.ImageField(upload_to='engapp/images/OurTeam/', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'OurTeam',
                'verbose_name_plural': 'OurTeam',
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ABOUT_US_SHORT', 'ABOUT_US_SHORT'), ('ABOUT_US', 'ABOUT_US'), ('MOBILE', 'MOBILE'), ('URL', 'URL'), ('EMAIL', 'EMAIL'), ('FAX', 'FAX'), ('TEL', 'TEL'), ('LOCATION', 'LOCATION'), ('ADDRESS', 'ADDRESS'), ('SLOGAN', 'SLOGAN'), ('ABOUT_US_TITLE', 'ABOUT_US_TITLE'), ('TITLE', 'TITLE'), ('CURRENCY', 'CURRENCY'), ('PRE_TILTE', 'PRE_TILTE'), ('VIDEO_TITLE', 'VIDEO_TITLE'), ('VIDEO_LINK', 'VIDEO_LINK'), ('CONTACT_US', 'CONTACT_US'), ('POSTAL_CODE', 'POSTAL_CODE'), ('TERMS', 'TERMS'), ('OUR_TEAM_TITLE', 'OUR_TEAM_TITLE'), ('OUR_TEAM_LINK', 'OUR_TEAM_LINK'), ('CSRF_FAILURE_MESSAGE', 'CSRF_FAILURE_MESSAGE'), ('THEME_COLOR', 'THEME_COLOR')], max_length=50, verbose_name='Parameter Name')),
                ('value', models.CharField(max_length=10000, verbose_name='Parameter Value')),
            ],
            options={
                'verbose_name': 'Parameter',
                'verbose_name_plural': 'Parameters',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ENABLED', 'ENABLED'), ('DISABLED', 'DISABLED')], default='ENABLED', max_length=50, verbose_name='Status')),
                ('first_name', models.CharField(max_length=200, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=200, verbose_name='Last Name')),
                ('mobile', models.CharField(blank=True, max_length=50, null=True, verbose_name='Mobile')),
                ('bio', models.CharField(blank=True, max_length=500, null=True, verbose_name='Bio')),
                ('image_origin', models.ImageField(blank=True, max_length=1200, null=True, upload_to='engapp/images/Profile/', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('IRAN', 'IRAN'), ('EUROPE', 'EUROPE'), ('AMERICA', 'AMERICA'), ('ASIA', 'ASIA')], default='IRAN', max_length=50, verbose_name='name')),
                ('priority', models.IntegerField(default=100, verbose_name='Priority')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(verbose_name='priority')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('subtitle', models.CharField(max_length=50, verbose_name='subtitle')),
                ('description', models.CharField(max_length=500, verbose_name='description')),
                ('date', models.DateTimeField(verbose_name='date')),
            ],
            options={
                'verbose_name': 'Resume',
                'verbose_name_plural': 'Resumes',
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('for_home', models.BooleanField(default=False, verbose_name='Show on homepage')),
                ('priority', models.IntegerField(default=100, verbose_name='Priority')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('image_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/OurService/', verbose_name='Image')),
                ('url', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Link URL')),
                ('icon_fa', models.CharField(blank=True, max_length=50, null=True, verbose_name='Icon FontAwesome')),
                ('icon_material', models.CharField(blank=True, choices=[('account_circle', 'account_circle'), ('add_shopping_cart', 'add_shopping_cart'), ('alarm', 'alarm'), ('attach_file', 'attach_file'), ('attach_money', 'attach_money'), ('backup', 'backup'), ('build', 'build'), ('chat', 'chat'), ('dashboard', 'dashboard'), ('delete', 'delete'), ('description', 'description'), ('face', 'face'), ('favorite', 'favorite'), ('get_app', 'get_app'), ('help_outline', 'help_outline'), ('home', 'home'), ('important_devices', 'important_devices'), ('link', 'link'), ('local_shipping', 'local_shipping'), ('lock', 'lock'), ('mail', 'mail'), ('notification_important', 'notification_important'), ('psychology', 'psychology'), ('publish', 'publish'), ('reply', 'reply'), ('schedule', 'schedule'), ('send', 'send'), ('settings', 'settings'), ('share', 'share'), ('sync', 'sync'), ('vpn_key', 'vpn_key')], max_length=100, null=True, verbose_name='Icon Material')),
                ('icon_svg', models.TextField(blank=True, null=True, verbose_name='Icon svg')),
                ('color', models.CharField(choices=[('success', 'success'), ('danger', 'danger'), ('warning', 'warning'), ('primary', 'primary'), ('secondary', 'secondary'), ('info', 'info'), ('light', 'light'), ('dark', 'dark'), ('rose', 'rose')], default='primary', max_length=50, verbose_name='Color')),
                ('width', models.IntegerField(default=128, verbose_name='Width')),
                ('height', models.IntegerField(default=128, verbose_name='Height')),
            ],
            options={
                'verbose_name': 'SocialLink',
                'verbose_name_plural': 'SocialLinks',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('icon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engapp.icon')),
                ('file', models.FileField(upload_to='engapp/images/Document', verbose_name='File')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
            },
            bases=('engapp.icon',),
        ),
        migrations.CreateModel(
            name='GalleryAlbum',
            fields=[
                ('jumbotron_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engapp.jumbotron')),
                ('image_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/Gallery/Album/', verbose_name='Big Image 345*970 ')),
                ('for_home', models.BooleanField(default=False, verbose_name='Show on homepage')),
                ('archive', models.BooleanField(default=False, verbose_name='Archive?')),
                ('priority', models.IntegerField(default=100, verbose_name='Priority')),
                ('thumbnail_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/Gallery/Album/Thumbnail/', verbose_name='Thumbnail Image')),
            ],
            options={
                'verbose_name': 'GalleryAlbum',
                'verbose_name_plural': 'GalleryAlbums',
            },
            bases=('engapp.jumbotron',),
        ),
        migrations.CreateModel(
            name='GalleryPhoto',
            fields=[
                ('jumbotron_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engapp.jumbotron')),
                ('image_origin', models.ImageField(upload_to='engapp/images/Gallery/Photo/', verbose_name='Big Image 345*970 ')),
                ('for_home', models.BooleanField(default=False, verbose_name='Show on homepage')),
                ('archive', models.BooleanField(default=False, verbose_name='Archive?')),
                ('priority', models.IntegerField(default=100, verbose_name='Priority')),
                ('thumbnail_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/Gallery/Photo/Thumbnail/', verbose_name='Thumbnail Image')),
            ],
            options={
                'verbose_name': 'GalleryPhoto',
                'verbose_name_plural': 'GalleryPhotos',
            },
            bases=('engapp.jumbotron',),
        ),
        migrations.CreateModel(
            name='HomeSlider',
            fields=[
                ('jumbotron_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engapp.jumbotron')),
                ('image_origin', models.ImageField(upload_to='engapp/images/HomeSlider/', verbose_name='Image 1333*2000 ')),
                ('archive', models.BooleanField(default=False, verbose_name='بایگانی شود؟')),
                ('priority', models.IntegerField(default=100, verbose_name='Priority')),
                ('tag_number', models.IntegerField(default=100, verbose_name='Tag Number')),
                ('tag_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tag Text')),
            ],
            options={
                'verbose_name': 'HomeSlider',
                'verbose_name_plural': 'HomeSliders',
            },
            bases=('engapp.jumbotron',),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('icon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engapp.icon')),
                ('for_home', models.BooleanField(default=False, verbose_name='Show on homepage')),
                ('priority', models.IntegerField(default=100, verbose_name='Priority')),
            ],
            options={
                'verbose_name': 'Link',
                'verbose_name_plural': 'Links',
            },
            bases=('engapp.icon',),
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('jumbotron_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engapp.jumbotron')),
                ('for_home', models.BooleanField(default=False, verbose_name='Show on homepage')),
                ('archive', models.BooleanField(default=False, verbose_name='Archive?')),
                ('header_image_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/Page/Banner/', verbose_name='Header Image 345*970 ')),
                ('image_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/Page/', verbose_name='Big Image')),
                ('grid_image_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/Page/Grid/', verbose_name='Grid Image')),
                ('thumbnail_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/Page/thumbnail/', verbose_name='Thumbnail Image')),
                ('priority', models.IntegerField(default=1000, verbose_name='Priority')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date Added')),
                ('title_secondary', models.CharField(blank=True, max_length=200, null=True, verbose_name='Secondary Title')),
                ('description_secondary', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Secondary Description')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
            },
            bases=('engapp.jumbotron',),
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('for_home', models.BooleanField(default=False, verbose_name='Show on homepage')),
                ('image_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/Testimonial/', verbose_name='Image')),
                ('title', models.CharField(max_length=2000, verbose_name='Title')),
                ('body', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Body')),
                ('footer', models.CharField(max_length=200, verbose_name='Footer')),
                ('priority', models.IntegerField(default=100, verbose_name='Priority')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='engapp.profile', verbose_name='Profile')),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=100, verbose_name='Priority')),
                ('image_header', models.ImageField(blank=True, null=True, upload_to='engapp/images/Tag/', verbose_name='Header Image')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='engapp.icon', verbose_name='Icon')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='ResumeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('EXPERIENCE', 'EXPERIENCE'), ('EDUCATION', 'EDUCATION'), ('SKILLS', 'SKILLS'), ('INTERESTS', 'INTERESTS'), ('CERTIFICATIONS', 'CERTIFICATIONS'), ('AWARDS', 'AWARDS'), ('WORKS DONE', 'WORKS DONE')], default='EDUCATION', max_length=50, verbose_name='title')),
                ('priority', models.IntegerField(verbose_name='priority')),
                ('our_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='engapp.ourteam', verbose_name='our_team')),
                ('resumes', models.ManyToManyField(to='engapp.Resume', verbose_name='resume')),
            ],
            options={
                'verbose_name': 'ResumeCategory',
                'verbose_name_plural': 'ResumeCategorys',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='engapp.region', verbose_name='region'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_eng', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ourteam',
            name='resume_categories',
            field=models.ManyToManyField(blank=True, to='engapp.ResumeCategory', verbose_name='ResumeCategories'),
        ),
        migrations.AddField(
            model_name='ourteam',
            name='social_links',
            field=models.ManyToManyField(blank=True, to='engapp.SocialLink', verbose_name='social_links'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('body', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('url', models.CharField(blank=True, max_length=1100, null=True, verbose_name='url')),
                ('seen', models.BooleanField(default=False, verbose_name='Seen?')),
                ('priority', models.IntegerField(default=1000, verbose_name='Priority')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date Added')),
                ('date_seen', models.DateTimeField(blank=True, null=True, verbose_name='Date Seen')),
                ('icon', models.CharField(default='notification_important', max_length=50, verbose_name='Icon')),
                ('color', models.CharField(blank=True, choices=[('success', 'success'), ('danger', 'danger'), ('warning', 'warning'), ('primary', 'primary'), ('secondary', 'secondary'), ('info', 'info'), ('light', 'light'), ('dark', 'dark'), ('rose', 'rose')], default='info', max_length=500, null=True, verbose_name='Color')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='engapp.profile', verbose_name='پروفایل')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date Added')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='engapp.profile', verbose_name='Profile')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date Added')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='engapp.profile', verbose_name='Profile')),
                ('replys', models.ManyToManyField(blank=True, to='engapp.Comment', verbose_name='Replies')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engapp.page')),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
            },
            bases=('engapp.page',),
        ),
        migrations.CreateModel(
            name='OurService',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engapp.page')),
                ('icon_fa', models.CharField(blank=True, max_length=50, null=True, verbose_name='Icon FontAwesome')),
                ('icon_material', models.CharField(blank=True, choices=[('account_circle', 'account_circle'), ('add_shopping_cart', 'add_shopping_cart'), ('alarm', 'alarm'), ('attach_file', 'attach_file'), ('attach_money', 'attach_money'), ('backup', 'backup'), ('build', 'build'), ('chat', 'chat'), ('dashboard', 'dashboard'), ('delete', 'delete'), ('description', 'description'), ('face', 'face'), ('favorite', 'favorite'), ('get_app', 'get_app'), ('help_outline', 'help_outline'), ('home', 'home'), ('important_devices', 'important_devices'), ('link', 'link'), ('local_shipping', 'local_shipping'), ('lock', 'lock'), ('mail', 'mail'), ('notification_important', 'notification_important'), ('psychology', 'psychology'), ('publish', 'publish'), ('reply', 'reply'), ('schedule', 'schedule'), ('send', 'send'), ('settings', 'settings'), ('share', 'share'), ('sync', 'sync'), ('vpn_key', 'vpn_key')], max_length=100, null=True, verbose_name='Icon Material')),
                ('icon_svg', models.TextField(blank=True, null=True, verbose_name='Icon svg')),
                ('color', models.CharField(choices=[('success', 'success'), ('danger', 'danger'), ('warning', 'warning'), ('primary', 'primary'), ('secondary', 'secondary'), ('info', 'info'), ('light', 'light'), ('dark', 'dark'), ('rose', 'rose')], default='primary', max_length=50, verbose_name='Color')),
                ('width', models.IntegerField(default=128, verbose_name='Width')),
                ('height', models.IntegerField(default=128, verbose_name='Height')),
            ],
            options={
                'verbose_name': 'OurService',
                'verbose_name_plural': 'OurServices',
            },
            bases=('engapp.page',),
        ),
        migrations.CreateModel(
            name='OurWork',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='engapp.page')),
                ('location', models.CharField(blank=True, max_length=500, null=True, verbose_name='Google Map Location 400*400')),
            ],
            options={
                'verbose_name': 'OurWork',
                'verbose_name_plural': 'OurWorks',
            },
            bases=('engapp.page',),
        ),
        migrations.AddField(
            model_name='resume',
            name='documents',
            field=models.ManyToManyField(blank=True, to='engapp.Document', verbose_name='documents'),
        ),
        migrations.AddField(
            model_name='resume',
            name='links',
            field=models.ManyToManyField(blank=True, to='engapp.Link', verbose_name='links'),
        ),
        migrations.CreateModel(
            name='PartialPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pretitle', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Pre Title')),
                ('title', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Title')),
                ('posttitle', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Post Title')),
                ('description', models.TextField(verbose_name='Full Description')),
                ('image_origin', models.ImageField(blank=True, null=True, upload_to='engapp/images/Blog/Partials/', verbose_name='Big Image')),
                ('priority', models.IntegerField(default=1000, verbose_name='Priority')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Data Added')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='engapp.profile', verbose_name='توسط')),
                ('documents', models.ManyToManyField(blank=True, to='engapp.Document', verbose_name='Documents')),
                ('galleries', models.ManyToManyField(blank=True, to='engapp.GalleryAlbum', verbose_name='Gallery Albums')),
                ('links', models.ManyToManyField(blank=True, to='engapp.Link', verbose_name='Links')),
            ],
            options={
                'verbose_name': 'PartialPage',
                'verbose_name_plural': 'PartialPages',
            },
        ),
        migrations.AddField(
            model_name='page',
            name='comments',
            field=models.ManyToManyField(blank=True, to='engapp.Comment', verbose_name='Comments'),
        ),
        migrations.AddField(
            model_name='page',
            name='documents',
            field=models.ManyToManyField(blank=True, to='engapp.Document', verbose_name='Documents'),
        ),
        migrations.AddField(
            model_name='page',
            name='likes',
            field=models.ManyToManyField(blank=True, to='engapp.Like', verbose_name='Likes'),
        ),
        migrations.AddField(
            model_name='page',
            name='links',
            field=models.ManyToManyField(blank=True, to='engapp.Link', verbose_name='Links'),
        ),
        migrations.AddField(
            model_name='page',
            name='meta_datas',
            field=models.ManyToManyField(blank=True, to='engapp.MetaData', verbose_name='Meta Datas'),
        ),
        migrations.AddField(
            model_name='page',
            name='partials',
            field=models.ManyToManyField(blank=True, to='engapp.PartialPage', verbose_name='Partial Pages'),
        ),
        migrations.AddField(
            model_name='page',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='engapp.profile', verbose_name='توسط'),
        ),
        migrations.AddField(
            model_name='page',
            name='relateds',
            field=models.ManyToManyField(blank=True, to='engapp.Page', verbose_name='Related Pages'),
        ),
        migrations.AddField(
            model_name='page',
            name='tags',
            field=models.ManyToManyField(blank=True, to='engapp.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='galleryalbum',
            name='photos',
            field=models.ManyToManyField(blank=True, to='engapp.GalleryPhoto', verbose_name='Photos'),
        ),
        migrations.AddField(
            model_name='document',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='engapp.profile', verbose_name='Profile'),
        ),
    ]
